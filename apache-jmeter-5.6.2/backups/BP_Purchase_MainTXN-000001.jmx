<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="SPDH message test (Purchase)" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampUp}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${duration}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">vars.put(&quot;GUID&quot;, &quot;${__UUID}&quot;);
vars.put(&quot;CURRENT_DATE&quot;, &quot;${__time(yyMMdd,)}&quot;);
vars.put(&quot;CURRENT_TIME&quot;, &quot;${__time(HHmmss,)}&quot;);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Execution variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="threads" elementType="Argument">
              <stringProp name="Argument.name">threads</stringProp>
              <stringProp name="Argument.value">${__P(threads,10)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">input variable</stringProp>
            </elementProp>
            <elementProp name="Const_timer" elementType="Argument">
              <stringProp name="Argument.name">Const_timer</stringProp>
              <stringProp name="Argument.value">${__P(input_time,100)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="STANValue" elementType="Argument">
              <stringProp name="Argument.name">STANValue</stringProp>
              <stringProp name="Argument.value">${__P(STANValue,21941)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="WNSP_Connect_serviceID" elementType="Argument">
              <stringProp name="Argument.name">WNSP_Connect_serviceID</stringProp>
              <stringProp name="Argument.value">PMG.4-01</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="duration" elementType="Argument">
              <stringProp name="Argument.name">duration</stringProp>
              <stringProp name="Argument.value">${__P(duration,600)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="batch" elementType="Argument">
              <stringProp name="Argument.name">batch</stringProp>
              <stringProp name="Argument.value">${__P(batchID,1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="instance" elementType="Argument">
              <stringProp name="Argument.name">instance</stringProp>
              <stringProp name="Argument.value">${__P(instance,nft1)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="TID_file" elementType="Argument">
              <stringProp name="Argument.name">TID_file</stringProp>
              <stringProp name="Argument.value">${__P(TID_file,TIDs)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="pan_file" elementType="Argument">
              <stringProp name="Argument.name">pan_file</stringProp>
              <stringProp name="Argument.value">${__P(pan_file,Big_PANs)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timerPurchase" elementType="Argument">
              <stringProp name="Argument.name">timerPurchase</stringProp>
              <stringProp name="Argument.value">${__P(timerPurchase,200)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="timerDeviation" elementType="Argument">
              <stringProp name="Argument.name">timerDeviation</stringProp>
              <stringProp name="Argument.value">${__P(timerDeviation,100)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="rampUp" elementType="Argument">
              <stringProp name="Argument.name">rampUp</stringProp>
              <stringProp name="Argument.value">${__P(rampUp,300)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="region" elementType="Argument">
              <stringProp name="Argument.name">region</stringProp>
              <stringProp name="Argument.value">${__P(region,RegA)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="endPoint.csv" enabled="true">
          <stringProp name="filename">config/${instance}endPoint${region}.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">TCPConnect_IP</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="STAN" enabled="true">
          <stringProp name="CounterConfig.start">${STANValue}</stringProp>
          <stringProp name="CounterConfig.end">999999</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">STAN</stringProp>
          <stringProp name="CounterConfig.format">000000</stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
          <stringProp name="TestPlan.comments">1</stringProp>
        </CounterConfig>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="PANs.csv" enabled="true">
          <stringProp name="filename">config/${pan_file}.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">pan,card</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TIDs.csv" enabled="true">
          <stringProp name="filename">config/${TID_file}.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">TID,purchaseBinTable,configVersion</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <com.aevi.jmeter.wnsp.samplers.TCPConnectSampler guiclass="com.aevi.jmeter.wnsp.samplers.TCPConnectGui" testclass="com.aevi.jmeter.wnsp.samplers.TCPConnectSampler" testname="WNSP_TCPConnect" enabled="true">
          <stringProp name="ip">${TCPConnect_IP}</stringProp>
          <stringProp name="port">11320</stringProp>
          <stringProp name="timeout">600000</stringProp>
          <boolProp name="ssl">true</boolProp>
          <stringProp name="BDK">0123456789ABCDEFFEDCBA9876543210</stringProp>
          <stringProp name="TestPlan.comments">52.223.28.130  ${TCPConnect_IP} ias-nft-motion.aevi-test.com</stringProp>
        </com.aevi.jmeter.wnsp.samplers.TCPConnectSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">${Const_timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">prev.setIgnore()</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <com.aevi.jmeter.wnsp.samplers.WNSPConnectSampler guiclass="com.aevi.jmeter.wnsp.samplers.WNSPConnectGui" testclass="com.aevi.jmeter.wnsp.samplers.WNSPConnectSampler" testname="WNSP_Connect" enabled="true">
          <stringProp name="ip">localhost</stringProp>
          <intProp name="port">1234</intProp>
          <stringProp name="tid">${TID}</stringProp>
          <stringProp name="timeout">600000</stringProp>
          <stringProp name="version">12</stringProp>
          <stringProp name="serviceId">PMG.4-01</stringProp>
          <stringProp name="connectionType">PMG</stringProp>
          <stringProp name="TestPlan.comments">600000</stringProp>
        </com.aevi.jmeter.wnsp.samplers.WNSPConnectSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${Const_timer}</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">prev.setIgnore()</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <com.aevi.jmeter.wnsp.samplers.WNSPSPDHMessageSampler guiclass="com.aevi.jmeter.wnsp.samplers.WNSPSPDHMessageGui" testclass="com.aevi.jmeter.wnsp.samplers.WNSPSPDHMessageSampler" testname="WNSP_Purchase" enabled="true">
          <stringProp name="tid">${TID}</stringProp>
          <stringProp name="msg">&lt;TRANSACTION Description=&quot;Purchase&quot; Timeout=&quot;45&quot; PMGAuthService=&quot;PMG.4-99&quot; FinancialTransaction=&quot;True&quot; &gt;
  &lt;SPDH&gt;
    &lt;HEADER&gt;
      &lt;HDR Name=&quot;1-2&quot; Description=&quot;Device type (.9)&quot; Data=&quot;9.&quot; /&gt;
      &lt;HDR Name=&quot;3-4&quot; Description=&quot;Transmission number&quot; Data=&quot;64&quot; /&gt;
      &lt;HDR Name=&quot;5-20&quot; Description=&quot;Terminal ID&quot; Data=&quot;${TID}&quot; /&gt;
      &lt;HDR Name=&quot;21-26&quot; Description=&quot;STAN&quot; Data=&quot;${STAN}&quot; /&gt;
      &lt;HDR Name=&quot;27-32&quot; Description=&quot;Current date&quot; Data=&quot;${CURRENT_DATE}&quot; /&gt;
      &lt;HDR Name=&quot;33-38&quot; Description=&quot;Current time&quot; Data=&quot;${CURRENT_TIME}&quot; /&gt;
      &lt;HDR Name=&quot;39&quot; Description=&quot;Message type&quot; Data=&quot;F&quot; /&gt;
      &lt;HDR Name=&quot;40&quot; Description=&quot;Message subtype&quot; Data=&quot;O&quot; /&gt;
      &lt;HDR Name=&quot;41-42&quot; Description=&quot;Transaction code&quot; Data=&quot;00&quot; /&gt;
      &lt;HDR Name=&quot;43&quot; Description=&quot;Processing flag 1&quot; Data=&quot;0&quot; /&gt;
      &lt;HDR Name=&quot;44&quot; Description=&quot;Processing flag 2&quot; Data=&quot;0&quot; /&gt;
      &lt;HDR Name=&quot;45&quot; Description=&quot;Processing flag 3&quot; Data=&quot;0&quot; /&gt;
      &lt;HDR Name=&quot;46-48&quot; Description=&quot;Response Code&quot; Data=&quot;000&quot; /&gt;
    &lt;/HEADER&gt;
    
    &lt;EXTENSION&gt;
      &lt;FID Name=&quot;P&quot; Description=&quot;Draft capture flag&quot; Data=&quot;1&quot; /&gt;
      &lt;FID Name=&quot;q&quot; Description=&quot;Track 2 - obsahuje START a END sentinel&quot; Data=&quot;${pan}D0&quot; /&gt;
      &lt;FID Name=&quot;B&quot; Description=&quot;AMOUNT&quot; Data=&quot;${__Random(2,9,)}&quot; /&gt;
      &lt;FID Name=&quot;e&quot; Description=&quot;POS condition code&quot; Data=&quot;00&quot; /&gt;
      &lt;FID Name=&quot;U&quot; Description=&quot;&quot; Data=&quot;0&quot; /&gt;
      
      &lt;FID Name=&quot;6&quot; Description=&quot;Additional data&quot; Data=&quot;&quot;&gt;
          &lt;FID Name=&quot;P&quot; Description=&quot;&quot; Data=&quot;010522410302008CA0000000031010&quot; /&gt;
    &lt;FID Name=&quot;T&quot; Description=&quot;DUKPT KSN (Key serial number)&quot; Data=&quot;FFFF${TID}D70000E5&quot; /&gt;
    &lt;FID Name=&quot;E&quot; Description=&quot;POS entry mode&quot; Data=&quot;021&quot; /&gt;
    &lt;FID Name=&quot;I&quot; Description=&quot;Currency code&quot; Data=&quot;978&quot; /&gt;
    &lt;FID Name=&quot;O&quot; Description=&quot;&quot; Data=&quot;01808262104133CF692BBB352861F5C0000015351214C02000010000082600000000100006010A03A00000&quot; /&gt;
      &lt;/FID&gt;
      
      &lt;FID Name=&quot;G&quot; Description=&quot;MAC&quot; Data=&quot;${TID}&quot; /&gt;
      
      &lt;FID Name=&quot;8&quot; Description=&quot;&quot; Data=&quot;&quot;&gt;
            &lt;FID Name=&quot;A&quot; Description=&quot;8-A&quot; Data=&quot;&quot;&gt;
                &lt;FID Name=&quot;S&quot; Description=&quot;8-A-S&quot; Data=&quot;&quot; /&gt;
                &lt;FID Name=&quot;T&quot; Description=&quot;8-A-T&quot; Data=&quot;&quot; /&gt;
            &lt;/FID&gt;
            &lt;FID Name=&quot;U&quot; Description=&quot;8-U&quot; Data=&quot;&quot;&gt;
                &lt;FID Name=&quot;G&quot; Description=&quot;GUID&quot; Data=&quot;${GUID}&quot; /&gt;
            &lt;/FID&gt;
      &lt;/FID&gt;
      
       &lt;FID Name=&quot;9&quot; Description=&quot;User specific data&quot; Data=&quot;&quot;&gt;
            &lt;FID Name=&quot;B&quot; Description=&quot;Batch ID&quot; Data=&quot;${batch}&quot; /&gt;
            &lt;FID Name=&quot;C&quot; Description=&quot;&quot; Data=&quot;&quot;&gt;
                &lt;FID Name=&apos;&quot;&apos; Description=&quot;&quot; Data=&quot;04.01.145002&quot; /&gt;
                &lt;FID Name=&quot;b&quot; Description=&quot;&quot; Data=&quot;${purchaseBinTable}&quot; /&gt;
                &lt;FID Name=&quot;y&quot; Description=&quot;&quot; Data=&quot;9B02E8009F0702FF809F0802008C9F0902008C9F0607A0000000031010500C5649534120444542495430325F24032212319F0D05F0000088009F0E0500400000009F0F05F0000098005F2403221231&quot; /&gt;
                &lt;FID Name=&quot;n&quot; Description=&quot;&quot; Data=&quot;${configVersion}&quot; /&gt;
                &lt;FID Name=&quot;^&quot; Description=&quot;&quot; Data=&quot;0&quot; /&gt;
                &lt;FID Name=&quot;/&quot; Description=&quot;&quot; Data=&quot;03472035&quot; /&gt;
                &lt;FID Name=&quot;?&quot; Description=&quot;&quot; Data=&quot;0&quot; /&gt;
               
            &lt;/FID&gt;
            &lt;FID Name=&quot;D&quot; Description=&quot;Transaction date and time&quot; Data=&quot;210413082638&quot; /&gt;
            &lt;FID Name=&quot;e&quot; Description=&quot;&quot; Data=&quot;&quot; /&gt;
            &lt;FID Name=&quot;f&quot; Description=&quot;&quot; Data=&quot;&quot;&gt;
                &lt;FID Name=&quot;a&quot; Description=&quot;&quot; Data=&quot;120&quot; /&gt;
                &lt;FID Name=&quot;s&quot; Description=&quot;&quot; Data=&quot;01&quot; /&gt;
                &lt;FID Name=&quot;d&quot; Description=&quot;&quot; Data=&quot;37&quot; /&gt;
            &lt;/FID&gt;
            &lt;FID Name=&quot;g&quot; Description=&quot;&quot; Data=&quot;&quot; /&gt;
            &lt;FID Name=&quot;J&quot; Description=&quot;&quot; Data=&quot;0&quot; /&gt;
            &lt;FID Name=&quot;+&quot; Description=&quot;&quot; Data=&quot;&quot;&gt;
                &lt;FID Name=&quot;w&quot; Description=&quot;&quot; Data=&quot;POS01&quot; /&gt;
            &lt;/FID&gt;
            &lt;FID Name=&quot;L&quot; Description=&quot;&quot; Data=&quot;&quot;&gt;
                &lt;FID Name=&quot;c&quot; Description=&quot;&quot; Data=&quot;en&quot; /&gt;
                &lt;FID Name=&quot;e&quot; Description=&quot;&quot; Data=&quot;1&quot; /&gt;
                &lt;FID Name=&quot;M&quot; Description=&quot;&quot; Data=&quot;en&quot; /&gt;
            &lt;/FID&gt;
        &lt;FID Name=&quot;m&quot; Description=&quot;&quot; Data=&quot;&quot; /&gt;
        &lt;FID Name=&quot;O&quot; Description=&quot;&quot; Data=&quot;60B0C800000000000003472035&quot; /&gt;
        &lt;FID Name=&quot;t&quot; Description=&quot;&quot; Data=&quot;${TID}&quot; /&gt;
           &lt;FID Name=&quot;V&quot; Description=&quot;&quot; Data=&quot;1&quot; /&gt;
           &lt;FID Name=&quot;W&quot; Description=&quot;&quot; Data=&quot;&quot;&gt;
                &lt;FID Name=&quot;Q&quot; Description=&quot;&quot; Data=&quot;1&quot; /&gt;
            &lt;/FID&gt;
           &lt;FID Name=&quot;X&quot; Description=&quot;&quot; Data=&quot;5F2A0208269B02E8009F0702FF809F330360B0C89F6604000000005F2503090701DFD13205DC4004F800DFD133050010000000DFD13405DC40002800DFD135023336DFD20101C0DFD4020151&quot;/&gt;
          &lt;FID Name=&quot;z&quot; Description=&quot;&quot; Data=&quot;&quot;&gt;
              &lt;FID Name=&quot;R&quot; Description=&quot;&quot; Data=&quot;${card}&quot; /&gt;
              &lt;FID Name=&quot;C&quot; Description=&quot;&quot; Data=&quot;${card} EMV&quot; /&gt;
          &lt;/FID&gt;
          &lt;FID Name=&quot;Z&quot; Description=&quot;&quot; Data=&quot;025|0100|0255|2550|025||||4|false|||2035728||false|WetStock|3|||;&quot; /&gt;
      &lt;/FID&gt;
    &lt;/EXTENSION&gt;
  &lt;/SPDH&gt;
&lt;/TRANSACTION&gt;</stringProp>
          <stringProp name="TestPlan.comments"> ${TID}  ${pan}</stringProp>
        </com.aevi.jmeter.wnsp.samplers.WNSPSPDHMessageSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">300</stringProp>
          </ConstantTimer>
          <hashTree/>
          <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${timerPurchase}</stringProp>
            <stringProp name="RandomTimer.range">${timerDeviation}</stringProp>
          </GaussianRandomTimer>
          <hashTree/>
        </hashTree>
        <com.aevi.jmeter.wnsp.samplers.WNSPDisconnectSampler guiclass="com.aevi.jmeter.wnsp.samplers.WNSPDisconnectGui" testclass="com.aevi.jmeter.wnsp.samplers.WNSPDisconnectSampler" testname="WNSP_Disconnect" enabled="true">
          <stringProp name="tid">${TID}</stringProp>
        </com.aevi.jmeter.wnsp.samplers.WNSPDisconnectSampler>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">500</stringProp>
          </ConstantTimer>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">prev.setIgnore()</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">Execution_results/Aggregate_Report.csv</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">Execution_results/Erros.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
